---
- name: Deploy Citadel API Gateway (FastAPI)
  hosts: cx-api-gateway
  become: yes
  vars:
    gateway_base_dir: /opt/gateway
    gateway_app_dir: "{{ gateway_base_dir }}/app"
    gateway_env_dir: "{{ gateway_base_dir }}/api-gateway_env"
    gateway_user: agent0

  tasks:
    - name: 1. Install prerequisite packages
      apt:
        name: python3.12-venv
        state: present
        update_cache: yes

    - name: 2. Ensure directory structure exists
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ gateway_user }}"
        group: "{{ gateway_user }}"
        mode: '0755'
      loop:
        - "{{ gateway_base_dir }}"
        - "{{ gateway_app_dir }}"
        - "{{ gateway_env_dir }}"

    - name: 3. Create Python 3.12 virtual environment
      command: "python3.12 -m venv {{ gateway_env_dir }}"
      args:
        creates: "{{ gateway_env_dir }}/bin/activate"
      become_user: "{{ gateway_user }}"

    - name: 4. Install FastAPI and Uvicorn into the virtual environment
      pip:
        name:
          - fastapi
          - uvicorn[standard]
        executable: "{{ gateway_env_dir }}/bin/pip"

    - name: 5. Deploy the minimal FastAPI application
      copy:
        dest: "{{ gateway_app_dir }}/main.py"
        content: |
          from fastapi import FastAPI
          app = FastAPI()

          @app.get("/")
          def root():
              return {"status": "Citadel API Gateway is running"}
        owner: "{{ gateway_user }}"
        group: "{{ gateway_user }}"
        mode: '0644'

    - name: 6. Create the systemd service file for the gateway
      copy:
        dest: /etc/systemd/system/gateway.service
        content: |
          [Unit]
          Description=Citadel API Gateway Service
          After=network.target

          [Service]
          User={{ gateway_user }}
          Group={{ gateway_user }}
          WorkingDirectory={{ gateway_app_dir }}
          ExecStart={{ gateway_env_dir }}/bin/uvicorn main:app --host 0.0.0.0 --port 8000
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: 7. Reload systemd daemon to recognize the new service
      systemd:
        daemon_reload: yes

    - name: 8. Enable and start the API Gateway service
      systemd:
        name: gateway
        enabled: yes
        state: started

    - name: 9. Validate the API Gateway is responding correctly
      uri:
        url: http://localhost:8000/
        return_content: yes
      register: gateway_status
      failed_when: gateway_status.status != 200 or 'running' not in gateway_status.content
      changed_when: false
