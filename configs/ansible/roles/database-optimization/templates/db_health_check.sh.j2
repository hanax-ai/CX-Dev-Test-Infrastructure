#!/bin/bash
# Database Health Check Script for Citadel Alpha
# Generated by Ansible - database-optimization role

echo "=== DATABASE HEALTH CHECK - $(date) ==="

# PostgreSQL Health Check
echo "üîç PostgreSQL Status:"
systemctl is-active postgresql > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ PostgreSQL service: RUNNING"
    
    # Check database connections
{% for db in databases %}
    psql -h localhost -U {{ db.owner }} -d {{ db.name }} -c "SELECT 1;" > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "‚úÖ Database {{ db.name }}: ACCESSIBLE"
    else
        echo "‚ùå Database {{ db.name }}: CONNECTION FAILED"
    fi
{% endfor %}
    
    # Check connection count
    CONNECTIONS=$(psql -h localhost -U postgres -t -c "SELECT count(*) FROM pg_stat_activity;")
    echo "üìä Current connections: $CONNECTIONS/{{ postgresql_max_connections }}"
    
else
    echo "‚ùå PostgreSQL service: STOPPED"
fi

echo ""

# Redis Health Check
echo "üîç Redis Status:"
systemctl is-active redis-server > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Redis service: RUNNING"
    
    # Test Redis connectivity
    redis-cli -h 127.0.0.1 -p {{ redis_port }} ping > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "‚úÖ Redis connectivity: OK"
        
        # Check memory usage
        MEMORY_USED=$(redis-cli -h 127.0.0.1 -p {{ redis_port }} info memory | grep used_memory_human | cut -d: -f2 | tr -d '\r')
        echo "üìä Redis memory usage: $MEMORY_USED/{{ redis_maxmemory }}"
    else
        echo "‚ùå Redis connectivity: FAILED"
    fi
else
    echo "‚ùå Redis service: STOPPED"
fi

echo ""
echo "=== HEALTH CHECK COMPLETE ==="
