#!/bin/bash
# Qdrant Health Check Script for Citadel Alpha
# Generated by Ansible - vector-database role

QDRANT_API="http://127.0.0.1:{{ qdrant_port }}"
API_KEY="{{ qdrant_api_key }}"

echo "=== QDRANT HEALTH CHECK - $(date) ==="

# Check Qdrant service status
echo "üîç Qdrant Service Status:"
systemctl is-active qdrant > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Qdrant service: RUNNING"
else
    echo "‚ùå Qdrant service: STOPPED"
    exit 1
fi

# Check Docker container status
echo ""
echo "üê≥ Docker Container Status:"
CONTAINER_STATUS=$(docker ps --filter "name=qdrant_citadel" --format "table {{.Status}}" | tail -n 1)
if [[ "$CONTAINER_STATUS" == *"Up"* ]]; then
    echo "‚úÖ Qdrant container: $CONTAINER_STATUS"
else
    echo "‚ùå Qdrant container: NOT RUNNING"
    exit 1
fi

# Test API connectivity
echo ""
echo "üîç API Connectivity:"
HEALTH_RESPONSE=$(curl -s -w "%{http_code}" -H "api-key: $API_KEY" "$QDRANT_API/health")
HTTP_CODE=$(echo "$HEALTH_RESPONSE" | tail -n1)

if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ Qdrant API: HEALTHY"
else
    echo "‚ùå Qdrant API: UNHEALTHY (HTTP $HTTP_CODE)"
    exit 1
fi

# Check collections
echo ""
echo "üìä Collections Status:"
COLLECTIONS_RESPONSE=$(curl -s -H "api-key: $API_KEY" "$QDRANT_API/collections")
COLLECTIONS_COUNT=$(echo "$COLLECTIONS_RESPONSE" | grep -o '"name"' | wc -l)

echo "Collections found: $COLLECTIONS_COUNT"

{% for collection in vector_collections %}
COLLECTION_INFO=$(curl -s -H "api-key: $API_KEY" "$QDRANT_API/collections/{{ collection.name }}")
POINTS_COUNT=$(echo "$COLLECTION_INFO" | grep -o '"points_count":[0-9]*' | cut -d':' -f2)
VECTORS_COUNT=$(echo "$COLLECTION_INFO" | grep -o '"vectors_count":[0-9]*' | cut -d':' -f2)

if [ ! -z "$POINTS_COUNT" ]; then
    echo "‚úÖ {{ collection.name }}: $POINTS_COUNT points, $VECTORS_COUNT vectors"
else
    echo "‚ùå {{ collection.name }}: ERROR accessing collection"
fi
{% endfor %}

# Check storage usage
echo ""
echo "üíæ Storage Usage:"
STORAGE_SIZE=$(du -sh {{ qdrant_storage_path }} | cut -f1)
echo "Storage directory size: $STORAGE_SIZE"

# Check memory usage
MEMORY_USAGE=$(docker stats qdrant_citadel --no-stream --format "table {{.MemUsage}}" | tail -n 1)
echo "Container memory usage: $MEMORY_USAGE"

echo ""
echo "=== HEALTH CHECK COMPLETE ==="
